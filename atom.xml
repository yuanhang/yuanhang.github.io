<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yuanhang&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuanhang.io/"/>
  <updated>2019-07-07T22:13:24.354Z</updated>
  <id>https://yuanhang.io/</id>
  
  <author>
    <name>Yuanhang Guo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unit Test in Spring MVC</title>
    <link href="https://yuanhang.io/2019/07/07/Unit-Test-in-Spring-MVC/"/>
    <id>https://yuanhang.io/2019/07/07/Unit-Test-in-Spring-MVC/</id>
    <published>2019-07-07T10:12:28.000Z</published>
    <updated>2019-07-07T22:13:24.354Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unit-Test-in-Spring-MVC"><a href="#Unit-Test-in-Spring-MVC" class="headerlink" title="Unit Test in Spring MVC"></a>Unit Test in Spring MVC</h1><h2 id="Mock"><a href="#Mock" class="headerlink" title="Mock"></a>Mock</h2><p>为什么使用Mock，因为单元测试不是集成测试，应该集中在当前的逻辑，对于其他的依赖应该假定符合预期而不应该重复测试。但是隔离依赖需要大量的重复工作和设计上的支持，有些遗留代码没有很好的隔离依赖的设计支持但又需要测试。Mock技术就是为了解决这些问题。</p><p>Mock可以解决哪些问题？</p><ul><li>verify: 对mock对象的行为进行控制<ul><li><strong>某个对象</strong>上的<strong>某个方法</strong>会被以<strong>某种参数</strong>调用<strong>预期的次数</strong></li><li>mock对象（及方法）被调用的顺序，先调用A，再调用的B</li><li>mock对象（及方法）从来没有被调用</li></ul></li><li>stub: 对mock对象的行为进行控制<ul><li><strong>某个对象</strong>上的<strong>某个方法</strong>以<strong>某种参数</strong>被调用时，会返回<strong>预期的结果</strong></li><li>mock对象的某个方法，以同样的参数被调用，返回不同的结果</li></ul></li><li>spy: 对真实对象（非mock）对象进行verify、stub（通常用于对于遗留代码的测试工作）。</li></ul><h2 id="Junit-5-Spring-Boot-1-5-2-Mockito"><a href="#Junit-5-Spring-Boot-1-5-2-Mockito" class="headerlink" title="Junit 5, Spring Boot 1.5.2, Mockito"></a>Junit 5, Spring Boot 1.5.2, Mockito</h2><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><p>Add denpendencies in <code>build.gradle</code><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">testCompile(<span class="string">'org.springframework.boot:spring-boot-starter-test'</span>)</span><br><span class="line">testCompile(<span class="string">'org.junit.jupiter:junit-jupiter-api:5.2.0'</span>)</span><br><span class="line">testRuntime(<span class="string">'org.junit.jupiter:junit-jupiter-engine:5.2.0'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is to use junit 5 with Spring 4.x (Spring Boot 1.x)</span></span><br><span class="line">testCompile(<span class="string">'com.github.sbrannen:spring-test-junit5:1.2.0'</span>)</span><br><span class="line"></span><br><span class="line">testCompile(<span class="string">'org.mockito:mockito-junit-jupiter:2.19.0'</span>)</span><br><span class="line">testCompile(<span class="string">'org.mockito:mockito-core:2.19.0'</span>)</span><br></pre></td></tr></table></figure></p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.yuanhang.demo.controller</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Assertions.assertNotNull</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeAll</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.DisplayName</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.TestInstance</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.extension.ExtendWith</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit.jupiter.SpringExtension</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.MockMvc</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders.<span class="keyword">get</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.forwardedUrl</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.status</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.setup.MockMvcBuilders</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExtendWith(SpringExtension::class)</span></span><br><span class="line"><span class="meta">@TestInstance(TestInstance.Lifecycle.PER_CLASS)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommonControllerTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> wac: WebApplicationContext</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> mockMvc: MockMvc</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeAll</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">setup</span><span class="params">()</span></span> &#123;</span><br><span class="line">        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(<span class="meta-string">"Wrong path should get 404"</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">incorrectPath</span><span class="params">()</span></span> &#123;</span><br><span class="line">        assertNotNull(mockMvc)</span><br><span class="line">        mockMvc.perform(<span class="keyword">get</span>(<span class="string">"/not-exist-path"</span>))</span><br><span class="line">            .andExpect(status().isNotFound)</span><br><span class="line">            .andExpect(forwardedUrl(<span class="literal">null</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@ExtendWith(SpringExtension::class)</code>是JUnit 5的新的设计，通过<code>ExtendWith</code>注解来扩展JUnit。</p><p><code>SpringExtension</code>来自<code>com.github.sbrannen:spring-test-junit5:1.5.0</code>，是为JUnit5增加<a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/testing.html#testcontext-framework" target="_blank" rel="noopener">Spring TestContext Framework</a>的支持，其中包括一个适用于Spring的Runner取代JUnit默认的Runner来跑测试。</p><p><code>SpringBootTest</code>提供一些默认的行为</p><h3 id="Mock-in-Spring-MVC"><a href="#Mock-in-Spring-MVC" class="headerlink" title="Mock in Spring MVC"></a>Mock in Spring MVC</h3><p>考虑如下设定：<br><code>AccountController</code>持有<code>AccountClient</code>的引用，正常情况下通过调用<code>AccountClient</code>上的方法完成请求。我们要测试的对象是<code>AccountController</code>。需要测是的内容包括：</p><ul><li>错误的签名会得到400的返回值</li><li>正确但过期的签名会得到400的返回值</li><li>正确且不过期的签名会得到正常的ResponseA</li></ul><p>因为要测试的对象是<code>AccountController</code>，所以我们应该假定<code>AccountClient</code>（外部依赖）的行为是没有问题的。为此需要Mock <code>AccountClient</code>，来控制其行为，以测试<code>AccountController</code>的行为。</p><p>AccountController.kt<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(path = [<span class="meta-string">"/accounts"</span>], produces = [MediaType.APPLICATION_JSON_UTF8_VALUE])</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> accountClient: AccountClient</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = [<span class="meta-string">"/"</span>], method = [RequestMethod.POST])</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">createSomething</span><span class="params">(<span class="meta">@RequestBody</span> signature: <span class="type">Signature</span>)</span></span>: SomeResponseA &#123;</span><br><span class="line">        <span class="keyword">if</span> (doSomeSignatureChecking(signature)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> CustomException(<span class="number">400</span>, <span class="string">"Wrong signature"</span>, <span class="string">"无效的签名"</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> timeOffset = abs(TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis()) - signature.timestamp)</span><br><span class="line">        <span class="keyword">if</span> (timeOffset &gt; <span class="number">3600</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> CustomException(<span class="number">400</span>, <span class="string">"Signature expired"</span>, <span class="string">"签名已过期"</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> accountClient.createSomething()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>AccountControllerTest.kt<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.yuanhang.demo.boot.controller.ExceptionControllerAdvice</span><br><span class="line"><span class="keyword">import</span> io.yuanhang.demo.core.utils.toJson</span><br><span class="line"><span class="keyword">import</span> io.yuanhang.demo.serviceA.feign.AccountClient</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Assertions.assertEquals</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeAll</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.DisplayName</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Nested</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.TestInstance</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.extension.ExtendWith</span><br><span class="line"><span class="keyword">import</span> org.mockito.InjectMocks</span><br><span class="line"><span class="keyword">import</span> org.mockito.Mock</span><br><span class="line"><span class="keyword">import</span> org.mockito.Mockito.`<span class="keyword">when</span>`</span><br><span class="line"><span class="keyword">import</span> org.mockito.Mockito.verifyZeroInteractions</span><br><span class="line"><span class="keyword">import</span> org.mockito.MockitoAnnotations</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit.jupiter.SpringExtension</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.MockMvc</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.setup.MockMvcBuilders</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExtendWith(SpringExtension::class)</span></span><br><span class="line"><span class="meta">@TestInstance(TestInstance.Lifecycle.PER_CLASS)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@DisplayName(<span class="meta-string">"Account Test"</span>)</span></span><br><span class="line"><span class="keyword">internal</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountControllerTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> mockMvc: MockMvc</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Mock</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> mockAccountClient: AccountClient</span><br><span class="line"></span><br><span class="line">    <span class="meta">@InjectMocks</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> accountController: AccountController</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeAll</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">setup</span><span class="params">()</span></span> &#123;</span><br><span class="line">        MockitoAnnotations.initMocks(<span class="keyword">this</span>)</span><br><span class="line">        mockMvc = MockMvcBuilders</span><br><span class="line">            .standaloneSetup(accountController)</span><br><span class="line">            .setControllerAdvice(ExceptionControllerAdvice())</span><br><span class="line">            .build()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nested</span></span><br><span class="line">    <span class="meta">@DisplayName(<span class="meta-string">"When Create Id"</span>)</span></span><br><span class="line">    <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">WhenCreatedId</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> path = <span class="string">"/accounts/"</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@Nested</span></span><br><span class="line">        <span class="meta">@DisplayName(<span class="meta-string">"When invalid signature"</span>)</span></span><br><span class="line">        <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">WhenWithInvalidSignature</span> </span>&#123;</span><br><span class="line">            <span class="meta">@Test</span></span><br><span class="line">            <span class="meta">@DisplayName(<span class="meta-string">"throws Wrong signature when wrong signature"</span>)</span></span><br><span class="line">            <span class="function"><span class="keyword">fun</span> <span class="title">throwsWrongSignature</span><span class="params">()</span></span> &#123;</span><br><span class="line">                <span class="keyword">val</span> invalidSignature = &#123;...&#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">val</span> resultActions = mockMvc.perform(</span><br><span class="line">                    MockMvcRequestBuilders.post(path)</span><br><span class="line">                        .contentType(MediaType.APPLICATION_JSON_UTF8)</span><br><span class="line">                        .content(invalidSignature.toJson()))</span><br><span class="line">                    .andExpect(MockMvcResultMatchers.status().isBadRequest)</span><br><span class="line">                <span class="keyword">val</span> response = resultActions.parseResponse&lt;SomeRessponseB&gt;()</span><br><span class="line">                assertEquals(<span class="string">"Wrong signature"</span>, response.message)</span><br><span class="line">                assertEquals(<span class="string">"无效的签名"</span>, response.userMessage)</span><br><span class="line">                verifyZeroInteractions(mockAccountClient)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Test</span></span><br><span class="line">            <span class="meta">@DisplayName(<span class="meta-string">"throws Signature expired when expired signature"</span>)</span></span><br><span class="line">            <span class="function"><span class="keyword">fun</span> <span class="title">throwsExpiredSignature</span><span class="params">()</span></span> &#123;</span><br><span class="line">                <span class="keyword">val</span> expiredSignature = &#123;...&#125;</span><br><span class="line">                <span class="keyword">val</span> resultActions = mockMvc.perform(</span><br><span class="line">                    MockMvcRequestBuilders.post(path)</span><br><span class="line">                        .contentType(MediaType.APPLICATION_JSON_UTF8)</span><br><span class="line">                        .content(expiredSignature.toJson()))</span><br><span class="line">                    .andExpect(MockMvcResultMatchers.status().isBadRequest)</span><br><span class="line">                <span class="keyword">val</span> response = resultActions.parseResponse&lt;SomeRessponseB&gt;()</span><br><span class="line">                assertEquals(<span class="string">"Signature expired"</span>, response.message)</span><br><span class="line">                assertEquals(<span class="string">"签名已过期"</span>, response.userMessage)</span><br><span class="line">                verifyZeroInteractions(mockAccountClient)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Nested</span></span><br><span class="line"><span class="meta">@DisplayName(<span class="meta-string">"When valid signature"</span>)</span></span><br><span class="line"><span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">WhenWithValidSignature</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> validSignature = &#123;...&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@DisplayName(<span class="meta-string">"Request to create Id will be redirected to ServiceA"</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">delegateToAccountClient</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">val</span> expected = &#123;...&#125;</span><br><span class="line">`<span class="keyword">when</span>`(mockAccountClient.createSomething()).thenReturn(expected)</span><br><span class="line"><span class="keyword">val</span> <span class="keyword">actual</span> = mockMvc.perform(</span><br><span class="line">MockMvcRequestBuilders.post(path)</span><br><span class="line">.contentType(MediaType.APPLICATION_JSON_UTF8)</span><br><span class="line">.content(validSignature.toJson()))</span><br><span class="line">.andExpect(MockMvcResultMatchers.status().isOk)</span><br><span class="line">.parseResponse&lt;SomeResponseA&gt;()</span><br><span class="line">assertEquals(expected, <span class="keyword">actual</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> ResultActions.<span class="title">parseResponse</span><span class="params">()</span></span>: T &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.andReturn().response.contentAsString.parseJson()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="Mock-AccountClient"><a href="#Mock-AccountClient" class="headerlink" title="Mock AccountClient"></a>Mock <code>AccountClient</code></h4><p>我们使用Mockito来完成Mock的部分。Mock <code>AccountClient</code>包括两个部分：<br>1、提供一个Mock <code>AccountClient</code><br>2、将其注入进入<code>AccountController</code><br>3、设定Mock <code>AccountClient</code>的行为（stub）</p><p>使用<code>@Mock</code>注解可以完成Step 1。根据<a href="https://static.javadoc.io/org.mockito/mockito-core/2.28.2/org/mockito/Mockito.html#mock_annotation" target="_blank" rel="noopener">Mockito的文档</a>，需要使用<code>MockitoAnnotations.initMocks(this)</code>来初始化Mock。</p><p>使用<code>@InjectMocks</code>注解标注<code>AccountController</code>，并指定<code>MockMvc</code>使用该<code>AccountController</code>，可以完成将Mock对象注入<code>AccountController</code>并进行测试的目的。为了处理<code>CustomException</code>，这里还设置<code>mockMvc</code>使用<code>ControllerAdvice</code>。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mockMvc = MockMvcBuilders</span><br><span class="line">            .standaloneSetup(accountController)</span><br><span class="line">            .setControllerAdvice(ExceptionControllerAdvice())</span><br><span class="line">            .build()</span><br></pre></td></tr></table></figure></p><p>使用<code>when().thenReturn</code>, <code>verifyZeroInteractions()</code>来设定Mock的行为及做出验证。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`<span class="keyword">when</span>`(mockAccountClient.createSomething()).thenReturn(expected)</span><br><span class="line"></span><br><span class="line">verifyZeroInteractions(mockAccountClient)</span><br></pre></td></tr></table></figure></p><p>为了方便对MockMvc得到的response做验证，这里写了一个小的方法来帮助把ResultActions中Response的JSON string反序列化为Model。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> ResultActions.<span class="title">parseResponse</span><span class="params">()</span></span>: T &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.andReturn().response.contentAsString.parseJson()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里要求API response中返回值的类型为<code>application/json</code>，可以通过在Controller中设定<code>@RequestMapping(path = [&quot;/accounts&quot;], produces = [MediaType.APPLICATION_JSON_UTF8_VALUE])</code>来完成。</p><h4 id="单元测试的组织结构"><a href="#单元测试的组织结构" class="headerlink" title="单元测试的组织结构"></a>单元测试的组织结构</h4><p><a href="https://junit.org/junit5/docs/current/user-guide/#writing-tests-nested" target="_blank" rel="noopener">JUnit 5文档</a>中建议通过<code>@Nested</code>注解嵌套class来表达测试用例之间的关系。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExtendWith(SpringExtension::class)</span></span><br><span class="line"><span class="meta">@TestInstance(TestInstance.Lifecycle.PER_CLASS)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@DisplayName(<span class="meta-string">"Account Test"</span>)</span></span><br><span class="line"><span class="keyword">internal</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountControllerTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Nested</span></span><br><span class="line">    <span class="meta">@DisplayName(<span class="meta-string">"When Create Id"</span>)</span></span><br><span class="line">    <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">WhenCreatedId</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Nested</span></span><br><span class="line">        <span class="meta">@DisplayName(<span class="meta-string">"When invalid signature"</span>)</span></span><br><span class="line">        <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">WhenWithInvalidSignature</span> </span>&#123;</span><br><span class="line">            <span class="meta">@Test</span></span><br><span class="line">            <span class="meta">@DisplayName(<span class="meta-string">"throws Wrong signature when wrong signature"</span>)</span></span><br><span class="line">            <span class="function"><span class="keyword">fun</span> <span class="title">throwsWrongSignature</span><span class="params">()</span></span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Test</span></span><br><span class="line">            <span class="meta">@DisplayName(<span class="meta-string">"throws Signature expired when expired signature"</span>)</span></span><br><span class="line">            <span class="function"><span class="keyword">fun</span> <span class="title">throwsExpiredSignature</span><span class="params">()</span></span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Nested</span></span><br><span class="line">        <span class="meta">@DisplayName(<span class="meta-string">"When valid signature"</span>)</span></span><br><span class="line">        <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">WhenWithValidSignature</span> </span>&#123;</span><br><span class="line">            <span class="meta">@Test</span></span><br><span class="line">            <span class="meta">@DisplayName(<span class="meta-string">"Request to create Id will be redirected to ServiceA"</span>)</span></span><br><span class="line">            <span class="function"><span class="keyword">fun</span> <span class="title">delegateToAccountClient</span><span class="params">()</span></span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="API路径存在却在测试时返回404"><a href="#API路径存在却在测试时返回404" class="headerlink" title="API路径存在却在测试时返回404"></a>API路径存在却在测试时返回404</h3><ol><li>检查Spring启动的时候的<code>RequestMappingHandlerMapping</code>，<code>POST /accounts</code>和<code>POST /accounts/</code>是不同的。</li><li>打开Spring的DEBUG Log来得到更多信息。<br>在<code>application.yml</code>中加入以下信息<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line">    <span class="string">org.springframework.web:</span> <span class="string">DEBUG</span></span><br><span class="line">    <span class="string">org.springframework.security:</span> <span class="string">DEBUG</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="Share-Logic-in-tests-between-projects"><a href="#Share-Logic-in-tests-between-projects" class="headerlink" title="Share Logic in tests between projects"></a>Share Logic in tests between projects</h3><p>标准java工程分为两个部分，<code>main</code>和<code>test</code>。相应的，gradle提供了<code>compile</code>和<code>testCompile</code>两个target来处理依赖。如果我们想要在Project之间共享测试的逻辑，如<code>ResultActions.parseResponse()</code><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> ResultActions.<span class="title">parseResponse</span><span class="params">()</span></span>: T &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.andReturn().response.contentAsString.parseJson()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>那么，就需要在gradle中指明测试的依赖<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile project(<span class="string">':project-contains-shared-logic-under-its-test-folder'</span>) <span class="comment">// for non-test dependency if needed</span></span><br><span class="line">testCompile project(<span class="string">':project-contains-shared-logic-under-its-test-folder'</span>).sourceSets.test.output</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Unit-Test-in-Spring-MVC&quot;&gt;&lt;a href=&quot;#Unit-Test-in-Spring-MVC&quot; class=&quot;headerlink&quot; title=&quot;Unit Test in Spring MVC&quot;&gt;&lt;/a&gt;Unit Test in Spri
      
    
    </summary>
    
    
      <category term="java" scheme="https://yuanhang.io/tags/java/"/>
    
      <category term="Spring MVC" scheme="https://yuanhang.io/tags/Spring-MVC/"/>
    
      <category term="Unit Test" scheme="https://yuanhang.io/tags/Unit-Test/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot for console application</title>
    <link href="https://yuanhang.io/2019/04/30/Spring-Boot-for-console-application/"/>
    <id>https://yuanhang.io/2019/04/30/Spring-Boot-for-console-application/</id>
    <published>2019-04-30T10:09:10.000Z</published>
    <updated>2019-04-30T10:09:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Spring-Boot-for-console-application"><a href="#Spring-Boot-for-console-application" class="headerlink" title="Spring Boot for console application"></a>Spring Boot for console application</h3><p>To start a hello world console/command line application using Spring Boot, first we need to add dependency to <code>spring-boot</code>.</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span>(<span class="string">"org.springframework.boot:spring-boot-starter"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then create <code>main</code> as entrypoint of our jar. </p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.yuanhang.consolesample</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component</span><br><span class="line"><span class="keyword">import</span> java.lang.System.exit</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConsoleSampleApplication</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Helloworld</span> : <span class="type">CommandLineRunner &#123;</span></span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">run</span><span class="params">(<span class="keyword">vararg</span> args: <span class="type">String</span>?)</span></span> &#123;</span><br><span class="line">        println(<span class="string">"hello world"</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    SpringApplicationBuilder(ConsoleSampleApplication::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>).<span class="title">web</span></span>(<span class="literal">false</span>).run(*args)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note: to prevent embeded tomcat being started, we added <code>.web(false)</code>. This will set <code>this.webEnvironment = false</code> inside Spring Boot.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Spring-Boot-for-console-application&quot;&gt;&lt;a href=&quot;#Spring-Boot-for-console-application&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot for consol
      
    
    </summary>
    
    
      <category term="kotlin" scheme="https://yuanhang.io/tags/kotlin/"/>
    
      <category term="IntelliJ" scheme="https://yuanhang.io/tags/IntelliJ/"/>
    
      <category term="Spring Boot" scheme="https://yuanhang.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Connect Application.yml and @ConfigurationProperties in IntelliJ</title>
    <link href="https://yuanhang.io/2019/04/25/Connect-Application-yml-and-ConfigurationProperties-in-IntelliJ/"/>
    <id>https://yuanhang.io/2019/04/25/Connect-Application-yml-and-ConfigurationProperties-in-IntelliJ/</id>
    <published>2019-04-25T10:15:57.000Z</published>
    <updated>2019-04-28T12:06:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Connect-Application-yml-and-ConfigurationProperties-in-IntelliJ"><a href="#Connect-Application-yml-and-ConfigurationProperties-in-IntelliJ" class="headerlink" title="Connect Application.yml and @ConfigurationProperties in IntelliJ"></a>Connect Application.yml and @ConfigurationProperties in IntelliJ</h1><p>Sometimes IntelliJ complains about “cannot resolve configuration property ‘a.b.c’”. Here is how to solve it.<br>Spring Boot provides details of configuration properties via a file under <code>resources/META-INF/spring-configuration-metadata.json</code>. It looks like this (see <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/configuration-metadata.html" target="_blank" rel="noopener">Appendix B. Configuration Metadata</a> for more details):<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"hints"</span>: [],</span><br><span class="line">  <span class="attr">"groups"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"sourceType"</span>: <span class="string">"io.yuanhang.sample.config.property.logProperties"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"dummyLog"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"io.yuanhang.sample.config.property.logProperties"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"properties"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"sourceType"</span>: <span class="string">"io.yuanhang.sample.config.property.logProperties"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"dummyLog.access-key-id"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"java.lang.String"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"sourceType"</span>: <span class="string">"io.yuanhang.sample.config.property.logProperties"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"dummyLog.access-key-secret"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"java.lang.String"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>While we don’t want to maintain the config by hand, we can utilize a dependency to generate <code>spring-configuration-metadata.json</code> for us. It is <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/configuration-metadata.html#configuration-metadata-annotation-processor" target="_blank" rel="noopener"><code>spring-boot-configuration-processor</code></a>.</p><p>For gradle,</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">// To resolve properties in yml</span></span><br><span class="line">    <span class="comment">// To generate `spring-configuration-metadata.json`</span></span><br><span class="line">    kapt <span class="string">"org.springframework.boot:spring-boot-configuration-processor"</span></span><br><span class="line">    <span class="comment">// To add `spring-boot-configuration-processor` into classpath</span></span><br><span class="line">    implementation <span class="string">"org.springframework.boot:spring-boot-configuration-processor"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>After add the dependency, just refresh gradle projects in your IntelliJ then you will find that the complain is gone. If not, try <code>gradle clean build</code> in your IntelliJ.</p><p>If you are interested, <code>spring-boot-configuration-processor</code> will generate <code>spring-configuration-metadata.json</code> under <code>sample/build/tmp/kapt3/classes/main/META-INF/</code>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Connect-Application-yml-and-ConfigurationProperties-in-IntelliJ&quot;&gt;&lt;a href=&quot;#Connect-Application-yml-and-ConfigurationProperties-in-In
      
    
    </summary>
    
    
      <category term="kotlin" scheme="https://yuanhang.io/tags/kotlin/"/>
    
      <category term="IntelliJ" scheme="https://yuanhang.io/tags/IntelliJ/"/>
    
      <category term="Spring Boot" scheme="https://yuanhang.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yuanhang.io/2019/04/06/hello-world/"/>
    <id>https://yuanhang.io/2019/04/06/hello-world/</id>
    <published>2019-04-06T11:12:18.000Z</published>
    <updated>2019-04-06T11:12:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Rails Stack - MongoDB, Bootstrap</title>
    <link href="https://yuanhang.io/2015/02/28/rails-stack-mongodb-bootstrap/"/>
    <id>https://yuanhang.io/2015/02/28/rails-stack-mongodb-bootstrap/</id>
    <published>2015-02-28T05:15:00.000Z</published>
    <updated>2019-04-06T11:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rails-Stack-MongoDB"><a href="#Rails-Stack-MongoDB" class="headerlink" title="Rails Stack - MongoDB"></a>Rails Stack - MongoDB</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>This is an introduction of creating rails stack together with MongoDB.<br>The tech stack includes:</p><ul><li>Rails</li><li>MongoDB</li><li>Bootstrap</li><li>AngularJS</li><li>Bower</li><li>Capistrano</li><li>Nginx</li><li>RSpec</li></ul><h2 id="Create-a-rails-application"><a href="#Create-a-rails-application" class="headerlink" title="Create a rails application"></a>Create a rails application</h2><p>It seems that <code>TurboLinks</code> does not play well with <code>AngularJS</code>. So we will not enable <code>TurboLinks</code> when we create the rails application.<br>Since we will use <code>RSpec</code>, here we skip the <code>test-unit</code> too (<code>-T</code>).</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails new -T --skip-turbolinks rails-stack-mongo</span><br></pre></td></tr></table></figure><p>You might want to add <code>config/secrets.yml</code> and <code>config/database.yml</code> into <code>.gitignore</code> to avoid expose them.</p><p>If you’ve already checked in those two files and want to remove them. Try the following:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm config/secrets.yml config/database.yml</span><br></pre></td></tr></table></figure><h2 id="Setup-Bower"><a href="#Setup-Bower" class="headerlink" title="Setup Bower"></a>Setup Bower</h2><p>We will use <code>bower</code> to manage the front-end libraries, including <code>bootstrap</code>. So here we need to setup <code>bower</code> first.</p><h3 id="Install-Bower"><a href="#Install-Bower" class="headerlink" title="Install Bower"></a>Install Bower</h3><p>OS X:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g bower</span><br></pre></td></tr></table></figure><p>Ubuntu:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nodejs npm</span><br><span class="line">sudo npm install -g bower</span><br><span class="line">sudo ln -s /usr/bin/nodejs /usr/bin/node</span><br></pre></td></tr></table></figure><p>In case the <code>git://</code> protocol is not working in your network, you can let git to replace <code>git://</code> with <code>https://</code>.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global url.<span class="string">"https://"</span>.insteadOf git://</span><br></pre></td></tr></table></figure><h3 id="Use-Bower-in-Rails"><a href="#Use-Bower-in-Rails" class="headerlink" title="Use Bower in Rails"></a>Use Bower in Rails</h3><p>We will use <code>bower-rails</code> to mange <code>bower</code> related actions. The main reason we use this gem instead of using <code>bower</code> directly is that, this gem provides a helper task <code>rake bower:resolve</code> to deal with the assets path problem in rails. For example in rails, we might found that the <code>Glyphicons</code> work well in development, but will raise <code>404 - not found</code> on production. By using <code>bower-rails</code> gem, we can handle such situation easily.</p><p>To use this gem, we need to add it into our <code>Gemfile</code>. </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="string">'bower-rails'</span>, <span class="string">'~&gt; 0.9.2'</span></span><br></pre></td></tr></table></figure><p>Run <code>bundle install</code>.<br>Then run </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g <span class="symbol">bower_rails:</span>initialize</span><br></pre></td></tr></table></figure><p>This will add <code>Bowerfile</code> and <code>initializers/bower_rails.rb</code>.</p><p>The <code>Bowerfile</code> is just like a <code>Gemfile</code>, but for <code>bower</code>. It uses an DSL developed to provide similar feel like using bundler. </p><p>You might also want to modify you <code>.gitignore</code> to exclude the libraries managed by bower from your source control.<br>Here is a sample <code>.gitignore</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># See https://help.github.com/articles/ignoring-files for more about ignoring files.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you find yourself ignoring temporary files generated by your text editor</span></span><br><span class="line"><span class="comment"># or operating system, you probably want to add a global ignore instead:</span></span><br><span class="line"><span class="comment">#   git config --global core.excludesfile '~/.gitignore_global'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ignore bundler config.</span></span><br><span class="line">/.bundle</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ignore the default SQLite database.</span></span><br><span class="line">/db/*.sqlite3</span><br><span class="line">/db/*.sqlite3-journal</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ignore all logfiles and tempfiles.</span></span><br><span class="line">/<span class="built_in">log</span>/*</span><br><span class="line">!/<span class="built_in">log</span>/.keep</span><br><span class="line">/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">### Rails template</span></span><br><span class="line">*.rbc</span><br><span class="line">capybara-*.html</span><br><span class="line">.rspec</span><br><span class="line">/<span class="built_in">log</span></span><br><span class="line">/tmp</span><br><span class="line">/db/*.sqlite3</span><br><span class="line">/db/*.sqlite3-journal</span><br><span class="line">/public/system</span><br><span class="line">/coverage/</span><br><span class="line">/spec/tmp</span><br><span class="line">**.orig</span><br><span class="line">rerun.txt</span><br><span class="line">pickle-email-*.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># TODO Comment out these rules if you are OK with secrets being uploaded to the repo</span></span><br><span class="line">config/initializers/secret_token.rb</span><br><span class="line">config/secrets.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">## Environment normalisation:</span></span><br><span class="line">/.bundle</span><br><span class="line">/vendor/bundle</span><br><span class="line"></span><br><span class="line"><span class="comment"># these should all be checked in to normalise the environment:</span></span><br><span class="line"><span class="comment"># Gemfile.lock, .ruby-version, .ruby-gemset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># unless supporting rvm &lt; 1.11.0 or doing something fancy, ignore this:</span></span><br><span class="line">.rvmrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># if using bower-rails ignore default bower_components path bower.json files</span></span><br><span class="line">/vendor/assets/bower_components</span><br><span class="line">*.bowerrc</span><br><span class="line">bower.json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### SVN template</span></span><br><span class="line">.svn/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### Windows template</span></span><br><span class="line"><span class="comment"># Windows image file caches</span></span><br><span class="line">Thumbs.db</span><br><span class="line">ehthumbs.db</span><br><span class="line"></span><br><span class="line"><span class="comment"># Folder config file</span></span><br><span class="line">Desktop.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># Recycle Bin used on file shares</span></span><br><span class="line"><span class="variable">$RECYCLE</span>.BIN/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows Installer files</span></span><br><span class="line">*.cab</span><br><span class="line">*.msi</span><br><span class="line">*.msm</span><br><span class="line">*.msp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows shortcuts</span></span><br><span class="line">*.lnk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### JetBrains template</span></span><br><span class="line"><span class="comment"># Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm</span></span><br><span class="line"></span><br><span class="line">*.iml</span><br><span class="line"></span><br><span class="line"><span class="comment">## Directory-based project format:</span></span><br><span class="line">.idea/</span><br><span class="line"><span class="comment"># if you remove the above rule, at least ignore the following:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User-specific stuff:</span></span><br><span class="line"><span class="comment"># .idea/workspace.xml</span></span><br><span class="line"><span class="comment"># .idea/tasks.xml</span></span><br><span class="line"><span class="comment"># .idea/dictionaries</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sensitive or high-churn files:</span></span><br><span class="line"><span class="comment"># .idea/dataSources.ids</span></span><br><span class="line"><span class="comment"># .idea/dataSources.xml</span></span><br><span class="line"><span class="comment"># .idea/sqlDataSources.xml</span></span><br><span class="line"><span class="comment"># .idea/dynamic.xml</span></span><br><span class="line"><span class="comment"># .idea/uiDesigner.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Gradle:</span></span><br><span class="line"><span class="comment"># .idea/gradle.xml</span></span><br><span class="line"><span class="comment"># .idea/libraries</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mongo Explorer plugin:</span></span><br><span class="line"><span class="comment"># .idea/mongoSettings.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## File-based project format:</span></span><br><span class="line">*.ipr</span><br><span class="line">*.iws</span><br><span class="line"></span><br><span class="line"><span class="comment">## Plugin-specific files:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># IntelliJ</span></span><br><span class="line">out/</span><br><span class="line"></span><br><span class="line"><span class="comment"># mpeltonen/sbt-idea plugin</span></span><br><span class="line">.idea_modules/</span><br><span class="line"></span><br><span class="line"><span class="comment"># JIRA plugin</span></span><br><span class="line">atlassian-ide-plugin.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Crashlytics plugin (for Android Studio and IntelliJ)</span></span><br><span class="line">com_crashlytics_export_strings.xml</span><br><span class="line">crashlytics.properties</span><br><span class="line">crashlytics-build.properties</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### OSX template</span></span><br><span class="line">.DS_Store</span><br><span class="line">.AppleDouble</span><br><span class="line">.LSOverride</span><br><span class="line"></span><br><span class="line"><span class="comment"># Icon must end with two \r</span></span><br><span class="line">Icon</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thumbnails</span></span><br><span class="line">._*</span><br><span class="line"></span><br><span class="line"><span class="comment"># Files that might appear on external disk</span></span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directories potentially created on remote AFP share</span></span><br><span class="line">.AppleDB</span><br><span class="line">.AppleDesktop</span><br><span class="line">Network Trash Folder</span><br><span class="line">Temporary Items</span><br><span class="line">.apdisk</span><br></pre></td></tr></table></figure><h2 id="Use-Bootstrap"><a href="#Use-Bootstrap" class="headerlink" title="Use Bootstrap"></a>Use Bootstrap</h2><h3 id="Install-Bootstrap-via-Bower"><a href="#Install-Bootstrap-via-Bower" class="headerlink" title="Install Bootstrap via Bower"></a>Install Bootstrap via Bower</h3><p>Edit <code>Bowerfile</code>, add</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asset <span class="string">'bootstrap'</span></span><br></pre></td></tr></table></figure><p>Then run </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake <span class="symbol">bower:</span>install</span><br></pre></td></tr></table></figure><p>to install <code>bootstrap</code>.</p><h3 id="Use-Bootstrap-in-rails"><a href="#Use-Bootstrap-in-rails" class="headerlink" title="Use Bootstrap in rails"></a>Use Bootstrap in rails</h3><p>Edit <code>config/application.rb</code> to add <code>bower_components</code> into asset pipeline.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config.assets.paths &lt;&lt; Rails.root.join(<span class="string">'vendor'</span>, <span class="string">'assets'</span>, <span class="string">'bower_components'</span>)</span><br><span class="line"><span class="comment"># config.assets.paths &lt;&lt; Rails.root.join('vendor', 'assets', 'bower_components', 'bootstrap', 'dist', 'fonts')</span></span><br><span class="line">config.assets.precompile &lt;&lt; <span class="regexp">%r(.*.(?:eot|svg|ttf|woff|woff2)</span>$)</span><br></pre></td></tr></table></figure><p>Edit <code>app/assets/javascripts/application.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//= require bootstrap/dist/js/bootstrap</span></span><br></pre></td></tr></table></figure><p>Edit <code>app/assets/stylesheets/application.css</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*= require bootstrap/dist/css/bootstrap</span><br></pre></td></tr></table></figure><h3 id="Fix-bootstrap-fonts-missing-issue"><a href="#Fix-bootstrap-fonts-missing-issue" class="headerlink" title="Fix bootstrap fonts missing issue"></a>Fix bootstrap fonts missing issue</h3><p>Edit <code>config/initializers/bower_rails.rb</code>, set <code>bower_rails.resolve_before_precompile = true</code>. This will run <code>rake bower:resolve</code> before compile. It will replace the <code>url()</code> in the css with <code>&lt;%= asset_path() %&gt;</code> helper. </p><h3 id="Verify-that-Bootstrap-works-in-Development"><a href="#Verify-that-Bootstrap-works-in-Development" class="headerlink" title="Verify that Bootstrap works in Development"></a>Verify that Bootstrap works in Development</h3><p>First we need to add a verification page.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g controller page index</span><br></pre></td></tr></table></figure><p>Edit <code>apps/views/page/index.html.erb</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">aria-label</span>=<span class="string">"Left Align"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-align-left"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Star</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Single button --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    Action <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">role</span>=<span class="string">"menu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Standard button --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a successful or positive action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>Success<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Contextual button for informational alert messages --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates caution should be taken with this action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-warning"</span>&gt;</span>Warning<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a dangerous or potentially negative action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-link"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Start rails in development mode:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails s</span><br></pre></td></tr></table></figure><p>Access <code>http://localhost:3000/page/index</code> to make sure that Bootstrap works well in <strong>development</strong> mode.</p><h3 id="Verify-Bootstrap-works-in-production-mode"><a href="#Verify-Bootstrap-works-in-production-mode" class="headerlink" title="Verify Bootstrap works in production mode"></a>Verify Bootstrap works in production mode</h3><p>Edit <code>config/secrets.yml</code> to generate secret_key_base which is required to start WEBrick in produciton mode.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake secret</span><br></pre></td></tr></table></figure><p>Precompile assets from production</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production rake <span class="symbol">assets:</span>clobber</span><br><span class="line">RAILS_ENV=production rake <span class="symbol">assets:</span>clean</span><br><span class="line">RAILS_ENV=production rake <span class="symbol">assets:</span>precompile</span><br></pre></td></tr></table></figure><p>Start WEBrick in production mode</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_SERVE_STATIC_FILES=<span class="literal">true</span> rails s -e production</span><br></pre></td></tr></table></figure><blockquote><p>Note: <code>RAILS_SERVE_STATIC_FILES=true</code> is added here because by default static files like *.css will not beserved by WEBrick in produciton mode. Check <code>config.serve_static_files</code> in  <code>config/environments/production.rb</code> for more details.</p></blockquote><p>Access <code>http://localhost:3000/page/index</code> to make sure that Bootstrap works well in <strong>production</strong> mode.</p><h2 id="Use-MongoDB"><a href="#Use-MongoDB" class="headerlink" title="Use MongoDB"></a>Use MongoDB</h2><p>Use <code>Mongoid</code> as ORM driver. Edit <code>Gemfile</code>,</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="string">'mongoid'</span>, <span class="string">'~&gt; 4.0.0'</span></span><br></pre></td></tr></table></figure><p>Then run <code>bundle install</code>.</p><p>Create <code>mongoid.yml</code>.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g <span class="symbol">mongoid:</span>config</span><br></pre></td></tr></table></figure><h2 id="Create-Controller"><a href="#Create-Controller" class="headerlink" title="Create Controller"></a>Create Controller</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g scaffold Task <span class="symbol">name:</span>string <span class="symbol">description:</span>text <span class="symbol">status:</span>string</span><br></pre></td></tr></table></figure><p>Restart your WEBrick server.</p><h2 id="Setup-to-use-Bootstrap-theme"><a href="#Setup-to-use-Bootstrap-theme" class="headerlink" title="Setup to use Bootstrap theme"></a>Setup to use Bootstrap theme</h2><p>Checkout <a href="http://getbootstrap.com/getting-started/" target="_blank" rel="noopener">Bootstrap’s sample</a> to setup the basic theme.</p><p>Edit <code>app/views/layouts/application.html.erb</code>,</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Rivendell<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%=</span> <span class="attr">stylesheet_link_tag</span> '<span class="attr">application</span>', <span class="attr">media:</span> '<span class="attr">all</span>' %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%=</span> <span class="attr">csrf_meta_tags</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#navbar"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">aria-controls</span>=<span class="string">"navbar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Rivendell<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navbar"</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">link_to</span>('<span class="attr">Home</span>', <span class="attr">root_path</span>) %&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">link_to</span>('<span class="attr">Tasks</span>', <span class="attr">tasks_path</span>) %&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--/.nav-collapse --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%=</span> <span class="attr">yield</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- /.container --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">javascript_include_tag</span> '<span class="attr">application</span>' %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Note: <code>&lt;%= javascript_include_tag &#39;application&#39; %&gt;</code> is put at the bottom to speed up the page loading.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Rails-Stack-MongoDB&quot;&gt;&lt;a href=&quot;#Rails-Stack-MongoDB&quot; class=&quot;headerlink&quot; title=&quot;Rails Stack - MongoDB&quot;&gt;&lt;/a&gt;Rails Stack - MongoDB&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>An idea about designing a flexible system</title>
    <link href="https://yuanhang.io/2014/10/08/an-idea-about-designing-a-flexible-system/"/>
    <id>https://yuanhang.io/2014/10/08/an-idea-about-designing-a-flexible-system/</id>
    <published>2014-10-08T13:13:00.000Z</published>
    <updated>2019-04-06T11:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>#An idea about desinging a flexible system</p><p>Flexible means every components can choose its reaction on incoming events. A system is composited by plenty of components. The way how components connects to each other determines the “flexibility” of the system. There are plenty of ways of how two components can be connected.</p><ul><li>Command style.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#An idea about desinging a flexible system&lt;/p&gt;
&lt;p&gt;Flexible means every components can choose its reaction on incoming events. A system is
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Extend Emacs with Emacs Lisp</title>
    <link href="https://yuanhang.io/2014/04/03/extend-emacs-with-emacs-lisp/"/>
    <id>https://yuanhang.io/2014/04/03/extend-emacs-with-emacs-lisp/</id>
    <published>2014-04-03T22:00:00.000Z</published>
    <updated>2019-04-06T11:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>#Extend Emacs with Emacs Lisp</p><p>##Start with an requirement<br>I’ve heard a lot about the <em>magic</em> about Emacs. As a programmer, I’d very like to learn Emacs this way cause that feels natural for me. And I feel excited about the idea that I can make what I need for me.</p><p>##Start with a requirement<br>I’m new to Emacs. And currently I’m facing a requirement of <em>rename the current buffer and the corresponding file</em>. I didn’t how to do that so I googled for <a href="http://stackoverflow.com/questions/384284/how-do-i-rename-an-open-file-in-emacs" target="_blank" rel="noopener">answer</a>, and found a solution from <a href="http://stackoverflow.com/users/17221/matt-curtis" target="_blank" rel="noopener">Matt Curtis</a>. It’s a piece of Emacs Lisp code.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">;; source: http://steve.yegge.googlepages.com/my-dot-emacs-file</span><br><span class="line">(defun rename-file-and-buffer (new-name)</span><br><span class="line">  &quot;Renames both current buffer and file it&apos;s visiting to NEW-NAME.&quot;</span><br><span class="line">  (interactive &quot;sNew name: &quot;)</span><br><span class="line">  (let ((name (buffer-name))</span><br><span class="line">        (filename (buffer-file-name)))</span><br><span class="line">    (if (not filename)</span><br><span class="line">        (message &quot;Buffer &apos;%s&apos; is not visiting a file!&quot; name)</span><br><span class="line">      (if (get-buffer new-name)</span><br><span class="line">          (message &quot;A buffer named &apos;%s&apos; already exists!&quot; new-name)</span><br><span class="line">        (progn</span><br><span class="line">          (rename-file name new-name 1)</span><br><span class="line">          (rename-buffer new-name)</span><br><span class="line">          (set-visited-file-name new-name)</span><br><span class="line">          (set-buffer-modified-p nil))))))</span><br></pre></td></tr></table></figure><p>##How to extend Emacs<br>The first problem I need to resolve is <em>how to get this code working with my Emacs</em>.</p><ol><li>Create a <code>.emacs</code> file under your home folder. That is where you put your customization.</li><li>Restart Emacs.</li><li><code>M-x rename-file-and-buffer</code>, <code>enter</code>.</li><li>Input the new name. Then <code>enter</code>.</li></ol><p>#</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ol><li><a href="http://jeremy.zawodny.com/emacs/emacs-4.html" target="_blank" rel="noopener">Emacs Beginner’s HOWTO: Customizing Emacs</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#Extend Emacs with Emacs Lisp&lt;/p&gt;
&lt;p&gt;##Start with an requirement&lt;br&gt;I’ve heard a lot about the &lt;em&gt;magic&lt;/em&gt; about Emacs. As a programme
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Emacs again</title>
    <link href="https://yuanhang.io/2014/04/03/emacs-again/"/>
    <id>https://yuanhang.io/2014/04/03/emacs-again/</id>
    <published>2014-04-03T14:33:00.000Z</published>
    <updated>2019-04-06T11:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>#Emacs Again</p><p>##Survive</p><ul><li>Open a file: <code>C-x C-f</code></li><li>Kill current buffer: <code>C-x k</code></li><li>Make a new file named <code>hello.py</code> under <code>~/workspace/python/hello.py</code>. And the directory <code>python</code> does not exist:</li><li><ol><li><code>C-x C-f ~/workspace/python/hello.py RET</code></li><li><code>M-x make-directory RET RET</code></li></ol></li><li>Save current buffer: <code>C-x C-s</code></li><li>Cancel current operation: <code>C-g</code></li></ul><p>##Move the cursor</p><ul><li>Forward a character: <code>C-f</code></li><li>Backward a character: <code>C-b</code></li><li>Move to the end of the line: <code>C-e</code></li><li>Move to the beginning of the line: <code>C-a</code></li><li>Move to the end of the buffer: <code>M-&gt;</code></li></ul><p>##Undo</p><ul><li><code>C-x u</code></li></ul><p>##Quit Emacs</p><ul><li><code>C-x C-c</code> quit</li><li><code>C-z</code> Minimize Emacs window</li></ul><p>##Split window</p><ul><li>Split window horizontally: <code>C-x 3</code></li><li>Split window vertically: <code>C-x 2</code></li><li>Close </li></ul><p>##Buffers<br>Ref:<a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Buffers.html#Buffers" target="_blank" rel="noopener">Buffers</a></p><ul><li>Switch to/Create buffer: <code>C-x b [name]</code></li><li>Switch to/Create buffer in new window: <code>C-x 4 b [name]</code></li><li>Switch to/Create buffer in new frame: <code>C-x 5 b [name]</code></li><li>Previous buffer: <code>C-x &lt;LEFT&gt;</code></li><li>List buffers: <code>C-x C-b</code></li><li>Toggle read-only status on buffer: <code>C-x C-q</code></li><li>Rename buffer: <code>M-x rename-buffer</code></li></ul><p>##Edit</p><ul><li>Duplicate current line: <code>C-a C-SPACE C-n M-w C-y</code><ol><li><code>C-a</code>: move to beginning of the line.</li><li><code>C-SPACE</code>: Begin a selection, set mark.</li><li><code>C-n</code>: Move to next line.</li><li><code>M-w</code>: Copy region.</li><li><code>C-y</code>: Yank.</li></ol></li></ul><p>##The official guide<br>The <a href="http://www.gnu.org/software/emacs/tour/" target="_blank" rel="noopener">official version</a> of this document. :)</p><p><a href="http://www.emacswiki.org/emacs/EmacsNewbieKeyReference" target="_blank" rel="noopener">Newbie Wiki</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#Emacs Again&lt;/p&gt;
&lt;p&gt;##Survive&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open a file: &lt;code&gt;C-x C-f&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Kill current buffer: &lt;code&gt;C-x k&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ma
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Blog on a new machine: using octopress and github pages</title>
    <link href="https://yuanhang.io/2013/07/22/blog-on-a-new-machine-using-octopress-and-github-pages/"/>
    <id>https://yuanhang.io/2013/07/22/blog-on-a-new-machine-using-octopress-and-github-pages/</id>
    <published>2013-07-22T14:51:00.000Z</published>
    <updated>2019-04-06T11:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>I have already create a github pages sometime before, using octopress,<br>hosted on github.<br>Today when I want to write a blog, I found I can not find the local<br>copy of the blog git repository to start. And I can’t find an instruction on how<br>to reuse an existing octopress git repository to continue blogging on<br>the <a href="http://octopress.org" target="_blank" rel="noopener">official octopress website</a>. After some<br>googling, here is how.</p><p>##Clone your existing blog repository<br>    git clone url_to_your_repository<br>The default branch after your checking out should be “master” branch.<br>Since octopress stores the “posts/blogs” under branch “source”, and<br>place the generated static website under “master”, I have to check out<br>the “source” branch from the remote repository to continue blogging.<br>This can be done by:<br>    git checkout source</p><p>##Install dependencies<br>    bundle install<br>this will get you all the required gems.</p><p>##Setup octopress to work with github pages<br>    rake setup_github_pages</p><p>##Setup locale<br>Since I may use Chinese to blog, I have to setup the locale. Or there<br>will be errors like “invalid byte sequence in xxxx(ASCII-8bit?)”.<br>On Mac OS X<br>    export LC_ALL=zh_CN.UTF-8<br>On Windows<br>    set LC_ALL=zh_CN.UTF-8 </p><p>##Test if it works<br>First generate the static website from source.<br>    rake generate<br>Then preview the website at local.<br>    rake preview<br>This action will start a embeded webserver (WebBrick) listen at<br><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>.<br>The good thing is it will watch the file change and auto re-generate the<br>website if an change is detected. To view the latest website, all you<br>need to do is refresh the URL in your browser.</p><p>##Deploy it to github pages<br>    rake deploy</p><p>##Push your new blog to source<br><code>rake deploy</code> only push the generated website to “master” branch of the<br>remote octopress repository. It will not automatically add your new post to<br>your local/remote repository. To save the new blog, you will need to add<br>it to git, and then push it to remote “source”.<br>    git add .<br>    git ci -am “add new post”<br>    git push </p><p>Go and check it!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I have already create a github pages sometime before, using octopress,&lt;br&gt;hosted on github.&lt;br&gt;Today when I want to write a blog, I found
      
    
    </summary>
    
      <category term="octopress" scheme="https://yuanhang.io/categories/octopress/"/>
    
    
  </entry>
  
  <entry>
    <title>A Programmer&#39;s way of blogging</title>
    <link href="https://yuanhang.io/2013/03/17/a-programmers-way-of-blogging/"/>
    <id>https://yuanhang.io/2013/03/17/a-programmers-way-of-blogging/</id>
    <published>2013-03-17T10:10:00.000Z</published>
    <updated>2019-04-06T11:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>I like to keep my fingers on the keyboard and getting everything done.<br>I like </p><blockquote><ul><li>vim</li><li>git</li><li>github</li><li>markdown</li></ul></blockquote><p>There is a way of blogging using the combination of all of them. That is<br>what I’m using (trying), <strong><a href="http://octopress.org" target="_blank" rel="noopener">Octopress</a></strong>. </p><p>Until now, it feels great!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I like to keep my fingers on the keyboard and getting everything done.&lt;br&gt;I like &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;git
      
    
    </summary>
    
    
  </entry>
  
</feed>
